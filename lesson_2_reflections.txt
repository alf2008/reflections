
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?What happens when you initialize a repository? Why do you need to do it?

Answer: Run "git init" to initialize a repository to build the .git file which is the object. Group files that will make logical change together to commit. 


How is the staging area different from the working directory and the repository? What value do you think it offers?

Working Directory - Original Files 
Staging Area - Stage files for commit 
Repository - Commits that include history information 

How can you use the staging area to make sure you have one commit per logical change?

Answer: Commit per logical change at a time. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Answer: When you have addtional features or re-design some of the functionalities e.g. language version. When branch is checked out, you will only make changes to the branch commit and leave mater unchanged. 

How do the diagrams help you visualize the branch structure?

Answer: Diagram gives you an overview about the Git Branches you have e.g. Master, New Features added so to visualize your branch structures. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Answer: Add the new feature to the master branch and branch lablel is to be removed. This way we keep track of all changes via the master branch. 
